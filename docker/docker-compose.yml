services:
    mongodb:
        image: mongo:8.0.13-noble
        container_name: mongodb
        environment:
            MONGO_INITDB_ROOT_USERNAME: mongo
            MONGO_INITDB_ROOT_PASSWORD: eQDGB2mv2V2c7H1FJ3TnpZVJ
            MONGO_INITDB_DATABASE: relational_knowledge_engineering_platform
        ports:
            - "27017:27017"
        volumes:
            - mongodb_data:/data/db
            - mongodb_config:/data/configdb
        command: >
            mongod  --bind_ip_all  --quiet
        networks:
            - internal
        restart: unless-stopped
        healthcheck:
            test: [ "CMD", "mongosh", "--eval", "db.adminCommand('ping')" ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s

    redis:
        image: redis:8.2.1-alpine3.22
        container_name: redis
        command: redis-server /usr/local/etc/redis/redis.conf --requirepass R7KUONlpUfFWAt85zCZ6vdfy
        ports:
            - "6379:6379"
        volumes:
            - redis_data:/data
            - ./configurations/redis.conf:/usr/local/etc/redis/redis.conf:ro
        restart: always
        healthcheck:
            test: ["CMD-SHELL", "redis-cli -a R7KUONlpUfFWAt85zCZ6vdfy ping"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s
        networks:
            - internal

    minio:
        image: quay.io/minio/minio:RELEASE.2025-09-07T16-13-09Z
        container_name: minio
        command: server /data --console-address ":9001"
        environment:
            MINIO_ROOT_USER: minio
            MINIO_ROOT_PASSWORD: 7vvInMiCa52g1dj8JG1fRRS9
            MINIO_DEFAULT_BUCKETS: files
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - minio_data:/data
        networks:
            - internal
        restart: unless-stopped
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            interval: 30s
            timeout: 20s
            retries: 3
            start_period: 30s

    neo4j:
        image: neo4j:5.26.12-community-bullseye
        container_name: neo4j
        environment:
            NEO4J_AUTH: neo4j/BTHOo7ZBg1mGZgZ1h3RZMIkK
            NEO4J_PLUGINS: '["apoc"]'
            NEO4J_apoc_export_file_enabled: true
            NEO4J_apoc_import_file_enabled: true
            NEO4J_apoc_import_file_use__neo4j__config: true
            NEO4J_dbms_memory_heap_initial__size: 512m
            NEO4J_dbms_memory_heap_max__size: 1G
            NEO4J_dbms_memory_pagecache_size: 512m
            NEO4J_dbms_connector_bolt_listen__address: 0.0.0.0:7687
            NEO4J_dbms_connector_http_listen__address: 0.0.0.0:7474
        ports:
            - "7474:7474"
            - "7687:7687"
        volumes:
            - neo4j_data:/data
            - neo4j_logs:/logs
            - neo4j_plugins:/plugins
        networks:
            - internal
        restart: unless-stopped
        healthcheck:
            test: [ "CMD", "cypher-shell", "-u", "neo4j", "-p", "BTHOo7ZBg1mGZgZ1h3RZMIkK", "RETURN 1" ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 60s

    qdrant:
        image: qdrant/qdrant:v1.7.4
        container_name: qdrant
        ports:
            - "6333:6333"
            - "6334:6334"
        volumes:
            - qdrant_data:/qdrant/storage
            - qdrant_config:/qdrant/config
        environment:
            QDRANT__SERVICE__HTTP_PORT: 6333
            QDRANT__SERVICE__GRPC_PORT: 6334
            QDRANT__STORAGE__PERFORMANCE__MAX_SEARCH_THREADS: 2
            QDRANT__STORAGE__PERFORMANCE__MAX_OPTIMIZATION_THREADS: 1
            QDRANT__STORAGE__WAL__WAL_CAPACITY_MB: 32
            QDRANT__SERVICE__MAX_REQUEST_SIZE_MB: 32
            QDRANT__CLUSTER__ENABLED: false
        networks:
            - internal
        restart: unless-stopped
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:6333/health" ]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 30s
    
    jaeger:
        image: jaegertracing/all-in-one:1.50
        container_name: jaeger
        environment:
            - COLLECTOR_OTLP_ENABLED=true
        ports:
            - "16686:16686"
            - "14268:14268"
            - "14250:14250"
            - "6831:6831/udp"
            - "4317:4317"
            - "4318:4318"
        restart: always
        healthcheck:
            test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:16686/ || exit 1"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s
        networks:
            - internal

    vault:
        image: hashicorp/vault:1.15
        container_name: vault
        environment:
            VAULT_ADDR: http://localhost:8200
            VAULT_API_ADDR: http://vault:8200
            VAULT_CLUSTER_ADDR: http://vault:8201
        ports:
            - "8200:8200"
            - "8201:8201"
        volumes:
            - vault_data:/vault/data
            - vault_logs:/vault/logs
            - ./configurations/vault-config.hcl:/vault/config/vault.hcl
        cap_add:
            - IPC_LOCK
        command: vault server -config=/vault/config/vault.hcl
        depends_on:
            consul:
                condition: service_started
        restart: always
        healthcheck:
            test: [ "CMD", "vault", "status" ]
            interval: 10s
            timeout: 3s
            retries: 5
            start_period: 30s
        networks:
            - internal

    consul:
        image: hashicorp/consul:1.17
        container_name: consul
        environment:
            CONSUL_BIND_INTERFACE: eth0
            CONSUL_CLIENT_INTERFACE: eth0
            CONSUL_MANAGEMENT_TOKEN: d75ZwDfswgVr5m2LXbys/ZwscG2788AkkgOSPln0074=
            CONSUL_AGENT_TOKEN: 7l2ESwSvmh8s5yPoHKg2AReUB1vAxaXXmSb9jkaLplc=
        ports:
            - "8500:8500"
            - "8600:8600/udp"
            - "8300:8300"
            - "8301:8301"
            - "8302:8302"
            - "8502:8502"
        volumes:
            - consul_data:/consul/data
            - consul_config:/consul/config
            - ./configurations/consul-server.json:/consul/config/server.json:ro
            - ./configurations/consul-init.sh:/consul/config/consul-init.sh:ro
            - ./configurations/consul-entrypoint.sh:/consul/config/consul-entrypoint.sh:ro
        command: /consul/config/consul-entrypoint.sh
        restart: always
        healthcheck:
            test: [ "CMD", "consul", "members" ]
            interval: 10s
            timeout: 3s
            retries: 5
            start_period: 10s
        networks:
            - internal

volumes:
    mongodb_data:
    mongodb_config:
    redis_data:
    minio_data:
    neo4j_data:
    neo4j_logs:
    neo4j_plugins:
    qdrant_data:
    qdrant_config:
    vault_data:
    vault_logs:
    consul_data:

networks:
    internal:
        driver: bridge
